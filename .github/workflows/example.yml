name: Run with example repository

on: 
  push: {}
  schedule:
    - cron:  '0 0 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 1.8
      uses: actions/setup-java@v3
      with:
          distribution: 'zulu'
          java-version: '8'

    - name: Build with Gradle
      run: ./gradlew --init-script=./scripts/disableSign.init.gradle publishToMavenLocal

    - name: copy useLocal.init.gradle
      run: cp ./scripts/useLocal.init.gradle ~/.m2/repository/

    - uses: actions/upload-artifact@v3
      with:
        name: maven-repository
        path: ~/.m2/repository

  example:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        gradle: 
          - "5.0"
          - "7.0"
          - "7.3"
        setting:
          - none # just build
          - setupDecompWorkspace
          - setupDevWorkspace
          - setupCiWorkspace
        useWrapper:
          - true
          - false
    steps:
      - uses: actions/checkout@v3
        with:
          repository: anatawa12/ForgeGradle-example
      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '8'
      - uses: actions/download-artifact@v2
        with:
          name: maven-repository
          path: ~/.m2/repository
      - name: copy useLocal.init.gradle
        run: cp ~/.m2/repository/useLocal.init.gradle .

      - name: Setup Gradle Wrapper
        run: |
          touch empty
          ./gradlew --build-file=empty wrapper --gradle-version=${{ matrix.gradle }}
          ./gradlew --build-file=empty wrapper
          rm empty

      - name: setup for wrapper artifact
        if: ${{ matrix.useWrapper == 'true' }}
        run: |
          echo "com.anatawa12.forge.gradle.wrapper-artifact=true" >> gradle.properties

      - name: Run Setup Task
        if: ${{ matrix.setting != 'none' }}
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 5
          max_attempts: 5
          command: ./gradlew --init-script=useLocal.init.gradle ${{ matrix.setting }}

      - name: Run Build Task
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 5
          max_attempts: 5
          command: ./gradlew --init-script=useLocal.init.gradle build

  conclude:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [build, example]
    steps:
      - name: Conclude Tests
        env: { NEEDS: "${{ toJSON(needs) }}" }
        run: |
          echo "$NEEDS" | jq -c '. | to_entries[] | [.key, .value.result]'
          echo "$NEEDS" | jq -e '. | all(.result == "success")' > /dev/null
